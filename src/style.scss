@import "node_modules/@wordpress/base-styles/mixins";
@import "node_modules/@wordpress/base-styles/breakpoints";

.wp-block-cdc-mobile-menu-template-part{
    --cdc-mobile-menu-template-part-bg-color: var(--wp--preset--color--base, #ffffff);
}
.wp-block-cdc-mobile-menu-template-part__responsive-container-close, 
.wp-block-cdc-mobile-menu-template-part__responsive-container-open {
    background: #0000;
    border: none;
    color: currentColor;
    cursor: pointer;
    margin: 0;
    padding: 0;
    text-transform: inherit;
    vertical-align: middle;
}
 .wp-block-cdc-mobile-menu-template-part button{
	background: #0000;
    border: none;
    color: currentColor;
    cursor: pointer;
    margin: 0;
    padding: 0;
    text-transform: inherit;
    vertical-align: middle;
}
.wp-block-cdc-mobile-menu-template-part__menu-container{
    bottom: 0;
    display: none;
    left: 0;
    position: fixed;
    right: 0;
    top: 0;
	&.is-modal-open{
		animation: overlay-menu__fade-in-animation .1s ease-out;
        animation-fill-mode: forwards;
        background-color: var(--cdc-mobile-menu-template-part-bg-color);
        display: flex;
        flex-direction: column;
        overflow: auto;
        padding: clamp(1rem, var(--wp--style--root--padding-top), 20rem) clamp(1rem, var(--wp--style--root--padding-right), 20rem) clamp(1rem, var(--wp--style--root--padding-bottom), 20rem) clamp(1rem, var(--wp--style--root--padding-left), 20em);
        z-index: 100000;
	}
}
// Button to open the menu.
.wp-block-cdc-mobile-menu-template-part__responsive-container-open {
	display: flex;

	// When set to collapse into a text button, it should inherit the parent font.
	// This needs specificity to override inherited properties by the button element and component.
	&.wp-block-cdc-mobile-menu-template-part__responsive-container-open.wp-block-cdc-mobile-menu-template-part__responsive-container-open {
		font-family: inherit;
		font-weight: inherit;
		font-size: inherit;
	}

	&:not(.always-shown) {
		@include break-small {
			display: none;
		}
	}
}

// Button to close the menus.
.wp-block-cdc-mobile-menu-template-part__responsive-container-close {
	position: absolute;
	top: 0;
	right: 0;
	z-index: 2; // Needs to be above the modal z index itself.

	// When set to collapse into a text button, it should inherit the parent font.
	// This needs specificity to override inherited properties by the button element and component.
	&.wp-block-cdc-mobile-menu-template-part__responsive-container-close.wp-block-cdc-mobile-menu-template-part__responsive-container-close {
		font-family: inherit;
		font-weight: inherit;
		font-size: inherit;
	}
}

// The menu adds wrapping containers.
.wp-block-cdc-mobile-menu-template-part__responsive-close {
	width: 100%;

	.has-modal-open & {
		// Try to inherit wide-width when defined, so the X can align to a top-right aligned menu.
		max-width: var(--wp--style--global--wide-size, 100%);
		margin-left: auto;
		margin-right: auto;
	}

	// This element is not keyboard accessible, and is focusable only using the mouse.
	// It is part of the MicroModal library that adds a scrim outside of a modal dialog that is not fullscreen,
	// where clicking that scrim closes the overlay just like the close button.
	// It should not have a visible focus rectangle.
	&:focus {
		outline: none;
	}
}

.is-menu-open .wp-block-cdc-mobile-menu-template-part__responsive-close,
.is-menu-open .wp-block-cdc-mobile-menu-template-part__responsive-dialog,
.is-menu-open .wp-block-cdc-mobile-menu-template-part__responsive-container-content {
	box-sizing: border-box;
}

.wp-block-cdc-mobile-menu-template-part__responsive-dialog {
	position: relative;
}

// Adjust open dialog top margin when admin-bar is visible.
// Needs to be scoped to .is-menu-open, or it will shift the position of any other navigations that may be present.
.has-modal-open .admin-bar .is-modal-open .wp-block-cdc-mobile-menu-template-part__responsive-dialog {
	margin-top: var(--wp-admin--admin-bar--height);
}

// Prevent scrolling of the parent content when the modal is open.
html.has-modal-open {
	overflow: hidden;
}